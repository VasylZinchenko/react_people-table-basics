{"version":3,"sources":["components/PageNavLink.tsx","components/MainNav.tsx","App.tsx","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","api.ts","pages/PeoplePage.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","MainNav","role","App","Loader","PersonLink","person","name","sex","slug","PeopleTable","people","useParams","map","born","died","mother","motherName","father","fatherName","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","errorNotification","setErrorNotification","isLoading","setIsLoading","loadPeople","peopleFromServer","persone","find","useEffect","HomePage","NotFoundPage","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.89c8edf3.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport type Props = {\n  to: string;\n  text: string\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item', {\n        'has-background-grey-lighter': isActive,\n      },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from './PageNavLink';\n\nexport const MainNav = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport { MainNav } from './components/MainNav';\n\nexport const App: React.FC = () => {\n  return (\n    <>\n      <MainNav />\n      <div data-cy=\"app\">\n        <main className=\"section\">\n          <div className=\"container\">\n            <Outlet />\n          </div>\n        </main>\n      </div>\n    </>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types/Person';\n\ntype Props = {\n  person: Person | undefined;\n  name?: string | null;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person, name }) => {\n  return (\n    <>\n      {person ? (\n        <Link\n          className={classNames({ 'has-text-danger': person.sex === 'f' })}\n          to={`../${person.slug}`}\n        >\n          {person.name}\n        </Link>\n      ) : (\n        name || '-'\n      )}\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types/Person';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => (\n          <tr\n            data-cy=\"person\"\n            className={classNames({\n              'has-background-warning': person.slug === slug,\n            })}\n            key={person.slug}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              <PersonLink person={person.mother} name={person.motherName} />\n            </td>\n            <td>\n              <PersonLink person={person.father} name={person.fatherName} />\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useState, useEffect } from 'react';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { getPeople } from '../api';\nimport { Person } from '../types/Person';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [errorNotification, setErrorNotification] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const loadPeople = async () => {\n    try {\n      const peopleFromServer = await getPeople();\n\n      setIsLoading(true);\n      setPeople(\n        peopleFromServer.map((persone) => {\n          return {\n            ...persone,\n            mother: peopleFromServer.find(\n              (mother) => persone.motherName === mother.name,\n            ),\n\n            father: peopleFromServer.find(\n              (father) => persone.fatherName === father.name,\n            ),\n          };\n        }),\n      );\n    } catch (error) {\n      setErrorNotification('Unable to update a todo');\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {errorNotification && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!people && (\n            <p data-cy=\"noPeopleMessage\">There are no people on the server</p>\n          )}\n\n          {!isLoading ? <Loader /> : <PeopleTable people={people} />}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const HomePage = () => {\n  return <h1 className=\"title\">Home page</h1>;\n};\n","export const NotFoundPage = () => {\n  return <h1 className=\"title\">Page not found</h1>;\n};\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter, Routes, Route, Navigate,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement).render(\n  <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route path=\"people/\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </HashRouter>,\n);\n"],"sourceRoot":""}